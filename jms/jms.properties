

#-------------------------------------------------------------------------------
# Custom jms resources and configurations go here

# Name of the queueManager
jms.queueManager.name = NSI

# CCSID of the queueManager
# Valid only when transportType is CLIENT_TCP only
jms.queueManager.CCSID =


######################################################################################################################
# Configure Transport Type. Transport Type defines the mode of connection to the queue manager.
# Following values can be set in this property:
#
# 1. CLIENT_TCP
#   Uses TCP/IP connection in client mode. Connection is established by honouring the <host>, <port>
#   and <channel> attributes. Thus, this transport type can work with a queueManager residing in a remote
#   machine.
#
#
# 2. BIND
#   Uses native library call to talk with the queueManager. Thus, this transport model only works when the client
#   library and the queueManager reside in the same machine. <host>, <port> and <channel> attributes defined later
#   is ignored in this mode and connection is always made with the queueManager in "localhost". This transport type
#   is faster than CLIENT_TCP and should be preferred if the condition described above is satisfied.
#######################################################################################################################

jms.queueManager.transportType = CLIENT_TCP


jms.queueManager.host = localhost
jms.queueManager.port = 1414
jms.queueManager.channel = NSICHL

jms.pool.maxActive = 10
jms.pool.maxIdle = -1

################################################################################################
#
# A Boolean parameter that indicates whether MQ Fail Over is enabled or not
#
# jms.failover.enabled = true

#
# Indicates number of retry count in case of connection failover
#
# jms.failover.retrycount = 3

# Indicate the wait interval (in milliseconds) between two successive reties
# in case of MQ failover
#
# jms.failover.retrywaitinterval = 120000
 
# Configuration for dummy queue, that will be used to test the availability 
# of MQ.The value for this property is a physical name of the dummy queue 
#
# jms.testqueue.name = dummy 

#  Comma separated list of possible error codes of JMSException, those may 
#  be thrown in case of MQ failover 
#

# jms.failover.errorcodes = MQJMS2000,MQJMS2002,MQJMS2005,MQJMS2007,MQJMS2008,MQJMS2009
################################################################################################


# Setting for REF component
#

jms.queue.name.REF.inq = REFIN
jms.queue.name.REF.outq = REFOUT
jms.queue.name.REF.errq = REFERR
jms.queue.name.REF.errq.jmsClient=true

# Setting for XMS component
#

jms.queue.name.XMS.emailq = XMSIN
jms.queue.name.XMS.errq = XMSERR

# Setting for GWY component
#

jms.queue.name.GWY.xmlxxxxxxxxinq = XMLxxxxxxxxIN
jms.queue.name.GWY.xmlworldinq = XMLWORLDIN
jms.queue.name.GWY.swiftinq = SWIFTIN
jms.queue.name.GWY.c2inq = C2IN
jms.queue.name.GWY.xmlxxxxxxxxoutq = XMLxxxxxxxxOUT
jms.queue.name.GWY.xmlworldoutq = XMLWORLDOUT
jms.queue.name.GWY.swiftoutq = SWIFTOUT
jms.queue.name.GWY.errq = GWYERR
jms.queue.name.GWY.errq.jmsClient=true

# Setting for EXM component
#

jms.queue.name.EXM.inq=EXMIN
jms.queue.name.EXM.inq.jmsClient=true
jms.queue.name.EXM.errq=EXMERR

jms.queue.name.EXM.trashq=EXMBIN
jms.queue.name.EXM.trashq.jmsClient=true

jms.queue.name.EXM.nackq=EXMNACK
jms.queue.name.EXM.nackq.jmsClient=true

jms.queue.name.EXM.exm_adp_outq=EXMADP
jms.queue.name.EXM.exm_adp_outq.jmsClient=true
jms.queue.name.EXM.exm_gwy_outq=EXMGWY
jms.queue.name.EXM.exm_gwy_outq.jmsClient=true
jms.queue.name.EXM.exm_ref_outq=EXMREF
jms.queue.name.EXM.exm_ref_outq.jmsClient=true
jms.queue.name.EXM.exm_trd_outq=EXMTRD
jms.queue.name.EXM.exm_trd_outq.jmsClient=true
jms.queue.name.EXM.exm_gle_outq=EXMGLE
jms.queue.name.EXM.exm_gle_outq.jmsClient=true
jms.queue.name.EXM.exm_cam_outq=EXMCAM
jms.queue.name.EXM.exm_cam_outq.jmsClient=true
jms.queue.name.EXM.exm_bkg_outq=EXMBKG
jms.queue.name.EXM.exm_bkg_outq.jmsClient=true
jms.queue.name.EXM.exm_frx_outq=EXMFRX
jms.queue.name.EXM.exm_frx_outq.jmsClient=true
jms.queue.name.EXM.exm_cax_outq=EXMCAX
jms.queue.name.EXM.exm_cax_outq.jmsClient=true
jms.queue.name.EXM.exm_stl_outq=EXMSTL
jms.queue.name.EXM.exm_stl_outq.jmsClient=true
jms.queue.name.EXM.exm_ncm_outq=EXMNCM
jms.queue.name.EXM.exm_ncm_outq.jmsClient=true
jms.queue.name.EXM.exm_srs_outq=EXMSRS
jms.queue.name.EXM.exm_srs_outq.jmsClient=true
jms.queue.name.EXM.exm_slr_outq=EXMSLR
jms.queue.name.EXM.exm_slr_outq.jmsClient=true
jms.queue.name.EXM.exm_tax_outq=EXMTAX
jms.queue.name.EXM.exm_tax_outq.jmsClient=true





# Setting for TRD component
#

jms.queue.name.TRD.inq = TRDIN
jms.queue.name.TRD.outq = TRDOUT
jms.queue.name.TRD.errq = TRDERR
jms.queue.name.TRD.errq.jmsClient=true

# Setting for SLR component
#

jms.queue.name.SLR.inq = SLRIN
jms.queue.name.SLR.outq = SLROUT
jms.queue.name.SLR.errq = SLRERR
jms.queue.name.SLR.errq.jmsClient=true

# Setting for GLE component
#

jms.queue.name.GLE.inq = GLEIN
jms.queue.name.GLE.outq = GLEOUT
jms.queue.name.GLE.errq = GLEERR
jms.queue.name.GLE.errq.jmsClient=true

# Setting for SRS component
#

jms.queue.name.SRS.inq = SRSIN
jms.queue.name.SRS.outq = SRSOUT
jms.queue.name.SRS.errq = SRSERR
jms.queue.name.SRS.errq.jmsClient=true

# Setting for STL component
#

jms.queue.name.STL.inq = STLIN
jms.queue.name.STL.outq = STLOUT
jms.queue.name.STL.errq = STLERR
jms.queue.name.STL.errq.jmsClient=true

# Setting for CAM component
#

jms.queue.name.CAM.inq = CAMIN
jms.queue.name.CAM.outq = CAMOUT
jms.queue.name.CAM.errq = CAMERR
jms.queue.name.CAM.errq.jmsClient=true

# Setting for BKG component
#

jms.queue.name.BKG.inq = BKGIN
jms.queue.name.BKG.outq = BKGOUT
jms.queue.name.BKG.errq = BKGERR
jms.queue.name.BKG.errq.jmsClient=true

# Setting for FRX component
#

jms.queue.name.FRX.inq = FRXIN
jms.queue.name.FRX.outq = FRXOUT
jms.queue.name.FRX.errq = FRXERR
jms.queue.name.FRX.errq.jmsClient=true

# Setting for NCM component
#

jms.queue.name.NCM.inq = NCMIN
jms.queue.name.NCM.outq = NCMOUT
jms.queue.name.NCM.errq = NCMERR
jms.queue.name.NCM.errq.jmsClient=true

# Setting for CAX component
#

jms.queue.name.CAX.inq = CAXIN
jms.queue.name.CAX.outq = CAXOUT
jms.queue.name.CAX.errq = CAXERR
jms.queue.name.CAX.errq.jmsClient=true
#-------------------------------------------------------------------------------

# Setting for TAX component
#

jms.queue.name.TAX.inq = TAXIN
jms.queue.name.TAX.outq = TAXOUT
jms.queue.name.TAX.errq = TAXERR
jms.queue.name.TAX.errq.jmsClient=true
